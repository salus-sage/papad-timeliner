const lexer = require('nunjucks/src/lexer');

function trimWs(next, tokens) {
  next = tokens.nextToken();
  while (next.type === 'whitespace') {
    next = tokens.nextToken();
  }
  return next;
}

function getImports(str, options = {}) {
  const tokens = lexer.lex(str, { trimBlocks: true, ...options });

  const externals = [];

  while (!tokens.isFinished()) {
    let next = tokens.nextToken();
    if (next.type === lexer.TOKEN_BLOCK_START) {
      next = tokens.nextToken();
      if (next.type === lexer.TOKEN_WHITESPACE) {
        next = tokens.nextToken();
      }
      if (
        next.type === lexer.TOKEN_SYMBOL &&
        (next.value === 'extends' ||
          next.value === 'include' ||
          next.value === 'from')
      ) {
        next = trimWs(next, tokens);
        if (next.type === lexer.TOKEN_STRING) {
          externals.push(next.value);
        }
      }
    }
  }
  return externals;
}

module.exports = getImports;
