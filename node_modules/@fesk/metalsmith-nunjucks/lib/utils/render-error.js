const escapeHtml = require('./escape-html');

function getLineFromMissingImport(err, files) {
  try {
    const fileName = err.toString().match(/File "(.+)" not found/g);
    if (fileName && fileName[1]) {
      const foundLine = files.reduce((found, { contents: next }) => {
        if (found) return found;
        if (next.indexOf(fileName[1]) !== -1) {
          const fileLines = next.split('\n');
          return fileLines.reduce((fLine, nextLine, index) => {
            if (fLine) return fLine;
            if (nextLine.indexOf(fileName[1]) !== -1) {
              return index + 1;
            }
          }, null);
        }
      }, null);
      if (foundLine) {
        return foundLine;
      }
    }
  } catch (error) {
    return null;
  }
}

function getLineOfError(err, files) {
  const lineFromImport = getLineFromMissingImport(err, files);
  if (lineFromImport) {
    return lineFromImport;
  }

  const lines = err.toString().match(/Line ([0-9]+), Column ([0-9]+)/g);

  if (lines) {
    return lines[0].match(/\d/)[0];
  }
}

function renderError(err, fileName, files) {
  const line = getLineOfError(err, files);

  if (process.env.NODE_ENV === 'production') {
    throw err;
  }

  console.log(`\nError while rendering ${fileName}`);
  console.log(err.toString(), '\n', files);

  return `
      <div style="position: absolute; top: 0;bottom: 0;right: 0;left: 0; padding: 80px; font-family: sans-serif">
        <h1 style="color: darkred">An error occurred while rendering <b>${fileName}</b></h1>
        <pre style="font-size: 1.5em"><code>${err.toString()}</code></pre>
        <hr/>
        ${files.map(
          ({ contents, name }) =>
            `<h4>${name} source:</h4>
             <pre  ${
               name === fileName ? `data-line="${line}"` : ''
             } class="language-twig line-numbers"><code>${escapeHtml(
              contents
            )}</code></pre>`
        )}
        <p>Note: if you see an import and body block, this is added automatically by the system.</p>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/themes/prism-tomorrow.css" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/plugins/line-numbers/prism-line-numbers.min.css" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/plugins/line-highlight/prism-line-highlight.min.css" />
        <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/prism.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/components/prism-twig.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/plugins/line-numbers/prism-line-numbers.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/plugins/line-highlight/prism-line-highlight.js"></script>
        <style>.line-highlight{background: rgba(255, 0,0, .3)}</style>
      </div>
    `;
}
module.exports = renderError;
