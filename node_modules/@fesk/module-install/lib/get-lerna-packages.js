const path = require('path');
const isLernaPackage = require('./is-lerna-package');
const getLernaJson = require('./get-lerna-json');
const glob = require('glob-fs')({ gitignore: true });
const cachedPackageJson = require('./cached-package-json');

async function getLernaPackages(packagePath) {
  const cwd = packagePath || process.cwd();
  const lernaJson = getLernaJson(cwd);
  const lernaRelative = isLernaPackage(cwd)
    ? path.resolve(cwd, '..', '..')
    : cwd;

  const packageLocations = lernaJson.packages || ['packages/*'];
  const packages = await Promise.all(
    packageLocations.map(
      async packageLocation =>
        await glob.readdirPromise(packageLocation, {
          cwd: lernaRelative,
        })
    )
  );

  return packages
    .reduce((acc, arr) => acc.concat(arr), [])
    .map(modulePath => cachedPackageJson(modulePath))
    .filter(e => e)
    .map(packageJson => packageJson.name);
}

module.exports = getLernaPackages;
