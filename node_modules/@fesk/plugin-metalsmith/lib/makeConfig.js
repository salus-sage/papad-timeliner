const fs = require('fs');
const path = require('path');
const metalsmith = require('metalsmith');
const readJson = require('jsonfile').readFileSync;
const util = require('./util');
const debugUi = require('metalsmith-debug-ui');

module.exports = function makeConfiguration(
  metalsmithConfiguration,
  cwd,
  userConfiguration
) {
  const destinationPath = cwd || process.cwd();
  const packageJson = readJson(path.join(destinationPath, 'package.json'));
  const packageJsonConfig =
    packageJson && packageJson.fesk && packageJson.fesk.metalsmith
      ? packageJson.fesk.metalsmith
      : {};

  const configureCustomMetalsmith =
    typeof metalsmithConfiguration === 'string'
      ? util.findConfiguration(metalsmithConfiguration)
      : metalsmithConfiguration;

  const configuration = Object.assign(
    {
      source: path.join('src', 'views'),
      destination: 'dist',
      assetDir: path.join(destinationPath, 'dist', 'assets'),
      debug: process.env.NODE_ENV === 'development',
    },
    packageJsonConfig,
    userConfiguration || {}
  );

  if (!fs.existsSync(configuration.destination)) {
    configuration.destination = path.join(
      destinationPath,
      configuration.destination
    );
  }

  if (!fs.existsSync(configuration.source)) {
    configuration.source = path.join(destinationPath, configuration.source);
  }

  const basicConfiguration = metalsmith(destinationPath);

  if (configuration.debug) {
    debugUi.patch(basicConfiguration);
  }

  if (packageJson) {
    basicConfiguration.metadata({ pkg: packageJson });
  }

  basicConfiguration
    .source(configuration.source)
    .destination(configuration.destination)
    .use(() => (configuration.debug ? debugUi.clear() : null))
    .clean(false);

  return configureCustomMetalsmith(
    basicConfiguration,
    configuration,
    cwd,
    debugUi
  );
};
