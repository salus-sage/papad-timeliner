const fs = require('fs');
const path = require('path');
const chalk = require('chalk');
const manifest = require('metalsmith-webpack-manifest');
const schemaPlugin = require('metalsmith-json-schema');
const permalinks = require('metalsmith-permalinks');
const paths = require('metalsmith-paths/lib/node7');
const twigTransform = require('metalsmith-twig-transform');
const viewModel = require('metalsmith-view-model');

let warning = process.env.JEST_WORKER_ID !== undefined;

module.exports = function(metalsmith, config) {
  const configuration = Object.assign(
    {
      viewModels: [],
    },
    config
  );

  const warn = function(text) {
    console.log(chalk.yellow(text));
  };

  if (warning === false) {
    warn('       ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━');
    warn('       twig-templates folder is deprecated');
    warn('       Use nunjucks folder instead.');
    warn('       ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━');
    warning = true;
  }

  return metalsmith
    .use(schemaPlugin())
    .ignore('schema')
    .use(manifest(configuration))
    .use(paths({ property: 'paths' }))
    .use(viewModel(configuration.viewModels))
    .use(files => {
      if (!files['layouts/default.twig']) {
        files['layouts/default.twig'] = {
          mode: '0644',
          contents: fs.readFileSync(
            path.resolve(__dirname, 'lib', 'layouts', 'default.twig')
          ),
        };
      }
    })
    .use(twigTransform(configuration))
    .use(permalinks());
};
