const webpack = require('webpack');
const chalk = require('chalk');
const log = require('./scripts/parts').log;

module.exports = async (webpackConfig, options) => {
  const config = Object.assign(
    {
      watch: false,
    },
    options
  );
  const compiler = webpack(webpackConfig);

  if (config.watch) {
    compiler.watch(
      {
        aggregateTimeout: 200,
      },
      (err, stats) => {
        if (err) {
          console.log(err);
          return;
        }

        log(
          'package',
          `${chalk.green('✔︎')} Finished ${chalk.blue(
            'Webpack'
          )} in ${stats.endTime - stats.startTime}ms`,
          'webpack'
        );
      }
    );
  } else {
    const statistics = await new Promise((resolve, error) => {
      compiler.run((err, stats) => {
        if (err) {
          error(err);
        }
        resolve(stats);
      });
    });

    log(
      'package',
      `${chalk.green('✔︎')} Finished ${chalk.blue(
        'Webpack'
      )} in ${statistics.endTime - statistics.startTime}ms`,
      'webpack'
    );
  }
};
