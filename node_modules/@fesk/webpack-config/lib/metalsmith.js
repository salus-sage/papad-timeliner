const MetalsmithPlugin = require('@fesk/plugin-metalsmith');
const allConfigs = require('metalsmith-config-fesk/config/all');
const wrapConfig = require('metalsmith-config-fesk/lib/wrapConfig');
const Config = require('webpack-config').default;
const path = require('path');
const fs = require('fs');

const configs = allConfigs.filter(config =>
  fs.existsSync(path.join(process.cwd(), 'src', config.path))
);

const extraConfiguration = {};
if (configs.length === 1) {
  extraConfiguration.isRoot = true;
}

const plugins = configs.map(
  config =>
    new MetalsmithPlugin(
      { config: config.name },
      (metalsmithConfiguration, cwd, userConfiguration) =>
        wrapConfig(
          config.metalsmith,
          Object.assign(userConfiguration, extraConfiguration),
          process.cwd()
        )
    )
);

const entries = configs.reduce((assetEntries, config) => {
  if (config.bundledAssets) {
    assetEntries[config.name] = config.bundledAssets;
  }
  return assetEntries;
}, {});

module.exports = new Config().merge({
  entry: entries,
  output: {
    path: path.resolve(process.cwd(), 'dist/assets'),
  },
  plugins: [
    ...plugins,
    require('./plugins/manifest'),
    fs.existsSync(path.join(process.cwd(), 'public'))
      ? require('./plugins/public-folder')
      : null,
  ].filter(Boolean),
});
