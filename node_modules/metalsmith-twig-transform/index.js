const inPlace = require('metalsmith-in-place');
const pluginKit = require('metalsmith-plugin-kit');
const jstransform = require('stephenwf-fork-metalsmith-jstransformer');
const customEngine = require('stephenwf-fork-metalsmith-engine-jstransformer');

function twigWithLayouts(config) {
  return function(files, metalsmith, done) {
    return jstransform({
      pattern: config.pattern,
      layoutPattern: config.layouts
        ? config.layouts === true ? null : config.layouts + '/**'
        : null,
      defaultLayout: config.defaultLayout,
      engineOptions: {
        path: metalsmith._source,
        ['nunjucks-node']: {
          reporter: config.reporter,
        },
        customTransformer: function() {
          return require('jstransformer-nunjucks-node');
        },
      },
    })(files, metalsmith, done);
  };
}

function twigInPlace(config) {
  return function(files, metalsmith, done) {
    return inPlace({
      pattern: config.pattern,
      engine: customEngine,
      engineOptions: {
        path: metalsmith._source,
        reporter: config.reporter,
        // @todo fix typo in fork.
        customTrasnformer: function(ext) {
          return require('jstransformer-nunjucks-node');
        },
      },
    })(files, metalsmith, done);
  };
}

function twigTransformPlugin(opts) {
  const config = Object.assign(
    {
      pattern: '**/*.twig',
      layouts: null,
      defaultLayout: null,
      reporter: null,
    },
    opts
  );

  const fn = config.layouts ? twigWithLayouts(config) : twigInPlace(config);

  pluginKit.renameFunction(fn, 'atomic-twig-transform');

  return fn;
}

module.exports = twigTransformPlugin;
