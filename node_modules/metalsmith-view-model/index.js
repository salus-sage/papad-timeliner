const fs = require('fs');
const path = require('path');
const pluginKit = require('metalsmith-plugin-kit');

const noop = () => null;

function resolveLoader(loader) {
  if (!loader) {
    return (model, ...props) => model(...props);
  }
  return typeof loader === 'string' ? require(loader) : loader;
}

function dot(dotName, obj) {
  return dotName
    .split('.')
    .reduce((object, key) => (object ? object[key] || null : null), obj);
}

function resolveViewModel(vmPath) {
  if (typeof vmPath !== 'string') {
    return vmPath;
  }

  if (fs.existsSync(vmPath)) {
    return require(path.resolve(vmPath));
  }

  if (fs.existsSync(path.join(process.cwd(), vmPath))) {
    return require(path.join(process.cwd(), vmPath));
  }

  try {
    return require(vmPath);
  } catch (e) {
    throw new Error(`ViewModel ${vmPath} not found`);
  }
}

function metalsmithViewModelPlugin(opts) {
  if (!opts) {
    return noop;
  }
  const config = pluginKit.defaultOptions(
    {
      pattern: '**/*.{twig,njk}',
      resources: [],
    },
    opts
  );

  config.resources = config.resources.map(viewModel => {
    return {
      loader: resolveLoader(viewModel.loader),
      path: resolveViewModel(viewModel.path),
    };
  });

  if (!config.resources.length) {
    return noop;
  }

  function loadViewModel(name) {
    return config.resources.reduce((loadedModel, viewModel) => {
      if (loadedModel) return loadedModel;
      const model = dot(name, viewModel.path);
      return model ? { model, loader: viewModel.loader } : null;
    }, null);
  }

  return pluginKit.middleware({
    name: 'webpack-manifest',
    each: function(filename, fileObject, files, metalsmith) {
      if (fileObject.$viewModel) {
        const viewModel = loadViewModel(fileObject.$viewModel);
        if (!viewModel) {
          return;
        }
        fileObject.originalProps = fileObject.props || {};
        fileObject.props = viewModel.loader(
          viewModel.model,
          fileObject.props || {},
          fileObject,
          { metalsmith, files }
        );
      }
    },
    match: config.pattern,
  });
}

module.exports = metalsmithViewModelPlugin;
