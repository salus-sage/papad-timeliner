/**
 * Webpack Manifest plugin
 *
 * Converts webpack manifest file from assets folder into usable parameters
 * in Metalsmith.
 */
const fs = require('fs');
const path = require('path');
const readFileSync = require('jsonfile').readFileSync;
const pluginKit = require('metalsmith-plugin-kit');
const manifestToAssets = require('webpack-manifest-parser');

function manifestMetalsmithPlugin(opts) {
  const config = pluginKit.defaultOptions(
    {
      assets: null,
      assetFilePath: null,
      assetFileDestination: null,
      manifestFile: 'manifest.json',
    },
    opts
  );

  function getManifest(manifest, destination) {
    const manifestFile = readFileSync(manifest);
    return manifestToAssets(manifestFile, `/${config.assetFilePath}`, file => {
      return () =>
        fs.readFileSync(path.join(destination, config.assetFilePath, file));
    });
  }

  return pluginKit.middleware({
    name: 'webpack-manifest',
    after: function(files, metalsmith) {
      const metadata = metalsmith.metadata();
      const destination = metalsmith._destination;

      if (config.assets) {
        metadata.assets = config.assets;
      } else {
        try {
          metadata.assets = getManifest(
            path.join(destination, config.assetFilePath, config.manifestFile),
            destination
          );
        } catch (e) {
          // console.warn(e);
        }
      }
    },
  });
}

module.exports = manifestMetalsmithPlugin;
